{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';export var todoform=createSlice({name:'todoform',initialState:{lable:\"\"},reducers:{LableChange:function LableChange(state,e){// Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n// doesn't actually mutate the state because it uses the Immer library,\n// which detects changes to a \"draft state\" and produces a brand new\n// immutable state based off those changes\nstate.lable=e.payload;},Submit:function Submit(state,e){// Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n// doesn't actually mutate the state because it uses the Immer library,\n// which detects changes to a \"draft state\" and produces a brand new\n// immutable state based off those changes\nstate.lable=e.payload;}}});// Action creators are generated for each case reducer function\nvar _todoform$actions=todoform.actions,LableChange=_todoform$actions.LableChange,Submit=_todoform$actions.Submit;export{LableChange,Submit};export default todoform.reducer;","map":{"version":3,"names":["createSlice","todoform","name","initialState","lable","reducers","LableChange","state","e","payload","Submit","actions","reducer"],"sources":["/run/media/knifer/PROGRAMS DIMON/react2/todoList/redux-todo/src/redusers/todoformReduser.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const todoform = createSlice({\n  name: 'todoform',\n  initialState: {\n    lable: \"\",\n  },\n  reducers: {\n    LableChange: (state,e) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.lable = e.payload;\n      \n    },\n    Submit: (state,e) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.lable = e.payload;\n      \n    },\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { LableChange, Submit } = todoform.actions\n\nexport default todoform.reducer"],"mappings":"AAAA,OAASA,WAAT,KAA4B,kBAA5B,CAEA,MAAO,IAAMC,SAAQ,CAAGD,WAAW,CAAC,CAClCE,IAAI,CAAE,UAD4B,CAElCC,YAAY,CAAE,CACZC,KAAK,CAAE,EADK,CAFoB,CAKlCC,QAAQ,CAAE,CACRC,WAAW,CAAE,qBAACC,KAAD,CAAOC,CAAP,CAAa,CACxB;AACA;AACA;AACA;AACAD,KAAK,CAACH,KAAN,CAAcI,CAAC,CAACC,OAAhB,CAED,CARO,CASRC,MAAM,CAAE,gBAACH,KAAD,CAAOC,CAAP,CAAa,CACnB;AACA;AACA;AACA;AACAD,KAAK,CAACH,KAAN,CAAcI,CAAC,CAACC,OAAhB,CAED,CAhBO,CALwB,CAAD,CAA5B,CAyBP;AACO,sBAAgCR,QAAQ,CAACU,OAAzC,CAAQL,WAAR,mBAAQA,WAAR,CAAqBI,MAArB,mBAAqBA,MAArB,C,2BAEP,cAAeT,SAAQ,CAACW,OAAxB"},"metadata":{},"sourceType":"module"}