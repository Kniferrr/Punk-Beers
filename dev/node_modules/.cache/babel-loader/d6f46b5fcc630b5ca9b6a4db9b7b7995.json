{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';export var counterSlice2=createSlice({name:'counter',initialState:{value2:2},reducers:{increment2:function increment2(state){// Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n// doesn't actually mutate the state because it uses the Immer library,\n// which detects changes to a \"draft state\" and produces a brand new\n// immutable state based off those changes\nstate.value2+=1;},decrement2:function decrement2(state){state.value2-=1;},incrementByAmount:function incrementByAmount(state,action){state.value2+=action.payload;}}});// Action creators are generated for each case reducer function\nvar _counterSlice2$action=counterSlice2.actions,increment2=_counterSlice2$action.increment2,decrement2=_counterSlice2$action.decrement2,incrementByAmount=_counterSlice2$action.incrementByAmount;export{increment2,decrement2,incrementByAmount};export default counterSlice2.reducer;","map":{"version":3,"names":["createSlice","counterSlice2","name","initialState","value2","reducers","increment2","state","decrement2","incrementByAmount","action","payload","actions","reducer"],"sources":["/run/media/knifer/PROGRAMS DIMON/react2/todoList/redux-todo/src/redusers/counterSlice2.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const counterSlice2 = createSlice({\n  name: 'counter',\n  initialState: {\n    value2: 2,\n  },\n  reducers: {\n    increment2: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value2 += 1\n    },\n    decrement2: (state) => {\n      state.value2 -= 1\n    },\n    incrementByAmount: (state, action) => {\n      state.value2 += action.payload\n    },\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { increment2, decrement2, incrementByAmount } = counterSlice2.actions\n\nexport default counterSlice2.reducer"],"mappings":"AAAA,OAASA,WAAT,KAA4B,kBAA5B,CAEA,MAAO,IAAMC,cAAa,CAAGD,WAAW,CAAC,CACvCE,IAAI,CAAE,SADiC,CAEvCC,YAAY,CAAE,CACZC,MAAM,CAAE,CADI,CAFyB,CAKvCC,QAAQ,CAAE,CACRC,UAAU,CAAE,oBAACC,KAAD,CAAW,CACrB;AACA;AACA;AACA;AACAA,KAAK,CAACH,MAAN,EAAgB,CAAhB,CACD,CAPO,CAQRI,UAAU,CAAE,oBAACD,KAAD,CAAW,CACrBA,KAAK,CAACH,MAAN,EAAgB,CAAhB,CACD,CAVO,CAWRK,iBAAiB,CAAE,2BAACF,KAAD,CAAQG,MAAR,CAAmB,CACpCH,KAAK,CAACH,MAAN,EAAgBM,MAAM,CAACC,OAAvB,CACD,CAbO,CAL6B,CAAD,CAAjC,CAsBP;AACO,0BAAsDV,aAAa,CAACW,OAApE,CAAQN,UAAR,uBAAQA,UAAR,CAAoBE,UAApB,uBAAoBA,UAApB,CAAgCC,iBAAhC,uBAAgCA,iBAAhC,C,gDAEP,cAAeR,cAAa,CAACY,OAA7B"},"metadata":{},"sourceType":"module"}