{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    value: 0\n  },\n  reducers: {\n    increment: state => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      console.log(state);\n      state.value += 1;\n    },\n    decrement: state => {\n      state.value -= 1;\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  increment,\n  decrement,\n  incrementByAmount\n} = counterSlice.actions;\nexport default counterSlice.reducer;","map":{"version":3,"names":["createSlice","counterSlice","name","initialState","value","reducers","increment","state","console","log","decrement","incrementByAmount","action","payload","actions","reducer"],"sources":["/run/media/knifer/PROGRAMS DIMON/react2/todoList/redux-todo/src/redusers/counterSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    value: 0,\n  },\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      console.log(state)\n      state.value += 1\n    },\n    decrement: (state) => {\n      state.value -= 1\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload\n    },\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions\n\nexport default counterSlice.reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,YAAY,GAAGD,WAAW,CAAC;EACtCE,IAAI,EAAE,SADgC;EAEtCC,YAAY,EAAE;IACZC,KAAK,EAAE;EADK,CAFwB;EAKtCC,QAAQ,EAAE;IACRC,SAAS,EAAGC,KAAD,IAAW;MACpB;MACA;MACA;MACA;MACAC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACAA,KAAK,CAACH,KAAN,IAAe,CAAf;IACD,CARO;IASRM,SAAS,EAAGH,KAAD,IAAW;MACpBA,KAAK,CAACH,KAAN,IAAe,CAAf;IACD,CAXO;IAYRO,iBAAiB,EAAE,CAACJ,KAAD,EAAQK,MAAR,KAAmB;MACpCL,KAAK,CAACH,KAAN,IAAeQ,MAAM,CAACC,OAAtB;IACD;EAdO;AAL4B,CAAD,CAAhC,C,CAuBP;;AACA,OAAO,MAAM;EAAEP,SAAF;EAAaI,SAAb;EAAwBC;AAAxB,IAA8CV,YAAY,CAACa,OAAjE;AAEP,eAAeb,YAAY,CAACc,OAA5B"},"metadata":{},"sourceType":"module"}