{"ast":null,"code":"import _regeneratorRuntime from\"/home/knifer/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Punk-Beers/dev/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/knifer/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Punk-Beers/dev/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _classCallCheck from\"/home/knifer/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Punk-Beers/dev/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/knifer/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/Punk-Beers/dev/node_modules/@babel/runtime/helpers/esm/createClass.js\";var punkBeersSerwises=/*#__PURE__*/function(){function punkBeersSerwises(){_classCallCheck(this,punkBeersSerwises);this._apiBase='https://api.punkapi.com/v2';}_createClass(punkBeersSerwises,[{key:\"getAllBeers\",value:function(){var _getAllBeers=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(url){var res;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(this._apiBase).concat(url));case 2:res=_context.sent;if(res.ok){_context.next=5;break;}throw new Error(\"Could not fetch \".concat(url)+\", received \".concat(res.status));case 5:_context.next=7;return res.json();case 7:return _context.abrupt(\"return\",_context.sent);case 8:case\"end\":return _context.stop();}}},_callee,this);}));function getAllBeers(_x){return _getAllBeers.apply(this,arguments);}return getAllBeers;}()}]);return punkBeersSerwises;}();export{punkBeersSerwises as default};","map":{"version":3,"names":["punkBeersSerwises","_apiBase","url","fetch","res","ok","Error","status","json"],"sources":["/home/knifer/Документы/Punk-Beers/dev/src/serwises/punkBeersSerwises.js"],"sourcesContent":["export default class punkBeersSerwises {\n    _apiBase = 'https://api.punkapi.com/v2';\n    \n  \n    async getAllBeers(url) {\n      const res = await fetch(`${this._apiBase}${url}`);\n  \n      if (!res.ok) {\n        throw new Error(`Could not fetch ${url}` +\n          `, received ${res.status}`)\n      }\n      return await res.json();\n    }\n}"],"mappings":"irBAAqBA,kB,mGACjBC,Q,CAAW,4B,iJAGX,iBAAkBC,GAAlB,kJACoBC,MAAK,WAAI,KAAKF,QAAT,SAAoBC,GAApB,EADzB,QACQE,GADR,kBAGOA,GAAG,CAACC,EAHX,8BAIU,IAAIC,MAAJ,CAAU,0BAAmBJ,GAAnB,uBACAE,GAAG,CAACG,MADJ,CAAV,CAJV,8BAOeH,IAAG,CAACI,IAAJ,EAPf,kH,qIAJiBR,iB"},"metadata":{},"sourceType":"module"}