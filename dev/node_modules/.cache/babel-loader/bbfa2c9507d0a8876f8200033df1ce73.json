{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const Beers = createSlice({\n  name: 'Beers',\n  initialState: {\n    page: 0\n  },\n  reducers: {\n    increment: state => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {} = counterSlice.actions;\nexport default Beers.reducer;","map":{"version":3,"names":["createSlice","Beers","name","initialState","page","reducers","increment","state","value","counterSlice","actions","reducer"],"sources":["/home/knifer/Документы/react/Punk-Beers/src/redusers/Beers.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const Beers = createSlice({\n  name: 'Beers',\n  initialState: {\n    page: 0,\n  },\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1\n    },\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const {  } = counterSlice.actions\n\nexport default Beers.reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,KAAK,GAAGD,WAAW,CAAC;EAC/BE,IAAI,EAAE,OADyB;EAE/BC,YAAY,EAAE;IACZC,IAAI,EAAE;EADM,CAFiB;EAK/BC,QAAQ,EAAE;IACRC,SAAS,EAAGC,KAAD,IAAW;MACpB;MACA;MACA;MACA;MACAA,KAAK,CAACC,KAAN,IAAe,CAAf;IACD;EAPO;AALqB,CAAD,CAAzB,C,CAgBP;;AACA,OAAO,MAAM,KAAOC,YAAY,CAACC,OAA1B;AAEP,eAAeT,KAAK,CAACU,OAArB"},"metadata":{},"sourceType":"module"}