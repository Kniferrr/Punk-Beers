{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';export var counterSlice=createSlice({name:'counter',initialState:{value:0},reducers:{increment:function increment(state){// Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n// doesn't actually mutate the state because it uses the Immer library,\n// which detects changes to a \"draft state\" and produces a brand new\n// immutable state based off those changes\nstate.value+=1;},decrement:function decrement(state){state.value-=1;},incrementByAmount:function incrementByAmount(state,action){state.value+=action.payload;}}});// Action creators are generated for each case reducer function\nvar _counterSlice$actions=counterSlice.actions,increment=_counterSlice$actions.increment,decrement=_counterSlice$actions.decrement,incrementByAmount=_counterSlice$actions.incrementByAmount;export{increment,decrement,incrementByAmount};export default counterSlice.reducer;","map":{"version":3,"names":["createSlice","counterSlice","name","initialState","value","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","reducer"],"sources":["/home/knifer/Документы/Punk-Beers/dev/src/features/counter/counterSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    value: 0,\n  },\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1\n    },\n    decrement: (state) => {\n      state.value -= 1\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload\n    },\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions\n\nexport default counterSlice.reducer"],"mappings":"AAAA,OAASA,WAAT,KAA4B,kBAA5B,CAEA,MAAO,IAAMC,aAAY,CAAGD,WAAW,CAAC,CACtCE,IAAI,CAAE,SADgC,CAEtCC,YAAY,CAAE,CACZC,KAAK,CAAE,CADK,CAFwB,CAKtCC,QAAQ,CAAE,CACRC,SAAS,CAAE,mBAACC,KAAD,CAAW,CACpB;AACA;AACA;AACA;AACAA,KAAK,CAACH,KAAN,EAAe,CAAf,CACD,CAPO,CAQRI,SAAS,CAAE,mBAACD,KAAD,CAAW,CACpBA,KAAK,CAACH,KAAN,EAAe,CAAf,CACD,CAVO,CAWRK,iBAAiB,CAAE,2BAACF,KAAD,CAAQG,MAAR,CAAmB,CACpCH,KAAK,CAACH,KAAN,EAAeM,MAAM,CAACC,OAAtB,CACD,CAbO,CAL4B,CAAD,CAAhC,CAsBP;AACO,0BAAoDV,YAAY,CAACW,OAAjE,CAAQN,SAAR,uBAAQA,SAAR,CAAmBE,SAAnB,uBAAmBA,SAAnB,CAA8BC,iBAA9B,uBAA8BA,iBAA9B,C,8CAEP,cAAeR,aAAY,CAACY,OAA5B"},"metadata":{},"sourceType":"module"}