{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n\nconst createItem = lable => {\n  return {\n    lable,\n    important: false,\n    done: false,\n    id: 1\n  };\n};\n\nexport const todoitems = createSlice({\n  name: 'todoitems',\n  initialState: {\n    todoData: [createItem(\"First\"), createItem(\"2\"), createItem(\"3\")],\n    term: \"\",\n    filter: \"active\"\n  },\n  reducers: {\n    addTodoItem: (state, lable) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      const newItem = createItem(lable.payload);\n      let newArray = [...state.todoData, newItem];\n      state.todoData = newArray;\n    },\n    DelTodoItem: (state, id) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      console.log(`id - ${id}`);\n      console.log(id);\n      const idx = state.todoData.findIndex(el => el.id === id);\n      let newArray = [...state.todoData.slice(0, idx), ...state.todoData.slice(idx + 1)];\n      state.todoData = newArray;\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  addTodoItem,\n  DelTodoItem\n} = todoitems.actions;\nexport default todoitems.reducer;","map":{"version":3,"names":["createSlice","createItem","lable","important","done","id","todoitems","name","initialState","todoData","term","filter","reducers","addTodoItem","state","newItem","payload","newArray","DelTodoItem","console","log","idx","findIndex","el","slice","actions","reducer"],"sources":["/run/media/knifer/PROGRAMS DIMON/react2/redux-todo/src/redusers/todoitems.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\n\nconst createItem = (lable) => {\n    return{\n      lable,\n      important: false,\n      done: false,\n      id: 1\n    };\n    };\n\nexport const todoitems = createSlice({\n  name: 'todoitems',\n  initialState: {\n    todoData: [\n        createItem(\"First\"),\n        createItem(\"2\"),\n        createItem(\"3\")\n      ],\n      term: \"\",\n      filter: \"active\"\n  },\n  reducers: {\n    addTodoItem: (state,lable) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      \n      const newItem = createItem(lable.payload);\n      \n      \n        let newArray = [...state.todoData, newItem]; \n        \n        state.todoData = newArray;\n        \n    },\n    DelTodoItem: (state,id) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      \n      console.log(`id - ${id}`)\n      console.log(id)\n      \n      const idx = state.todoData.findIndex((el) => el.id === id);\n\n      let newArray = [...state.todoData.slice(0, idx),...state.todoData.slice(idx+1)];\n      state.todoData = newArray;\n        \n    },\n    \n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { addTodoItem, DelTodoItem } = todoitems.actions\n\nexport default todoitems.reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;;AAGA,MAAMC,UAAU,GAAIC,KAAD,IAAW;EAC1B,OAAM;IACJA,KADI;IAEJC,SAAS,EAAE,KAFP;IAGJC,IAAI,EAAE,KAHF;IAIJC,EAAE,EAAE;EAJA,CAAN;AAMC,CAPL;;AASA,OAAO,MAAMC,SAAS,GAAGN,WAAW,CAAC;EACnCO,IAAI,EAAE,WAD6B;EAEnCC,YAAY,EAAE;IACZC,QAAQ,EAAE,CACNR,UAAU,CAAC,OAAD,CADJ,EAENA,UAAU,CAAC,GAAD,CAFJ,EAGNA,UAAU,CAAC,GAAD,CAHJ,CADE;IAMVS,IAAI,EAAE,EANI;IAOVC,MAAM,EAAE;EAPE,CAFqB;EAWnCC,QAAQ,EAAE;IACRC,WAAW,EAAE,CAACC,KAAD,EAAOZ,KAAP,KAAiB;MAC5B;MACA;MACA;MACA;MAEA,MAAMa,OAAO,GAAGd,UAAU,CAACC,KAAK,CAACc,OAAP,CAA1B;MAGE,IAAIC,QAAQ,GAAG,CAAC,GAAGH,KAAK,CAACL,QAAV,EAAoBM,OAApB,CAAf;MAEAD,KAAK,CAACL,QAAN,GAAiBQ,QAAjB;IAEH,CAdO;IAeRC,WAAW,EAAE,CAACJ,KAAD,EAAOT,EAAP,KAAc;MACzB;MACA;MACA;MACA;MAEAc,OAAO,CAACC,GAAR,CAAa,QAAOf,EAAG,EAAvB;MACAc,OAAO,CAACC,GAAR,CAAYf,EAAZ;MAEA,MAAMgB,GAAG,GAAGP,KAAK,CAACL,QAAN,CAAea,SAAf,CAA0BC,EAAD,IAAQA,EAAE,CAAClB,EAAH,KAAUA,EAA3C,CAAZ;MAEA,IAAIY,QAAQ,GAAG,CAAC,GAAGH,KAAK,CAACL,QAAN,CAAee,KAAf,CAAqB,CAArB,EAAwBH,GAAxB,CAAJ,EAAiC,GAAGP,KAAK,CAACL,QAAN,CAAee,KAAf,CAAqBH,GAAG,GAAC,CAAzB,CAApC,CAAf;MACAP,KAAK,CAACL,QAAN,GAAiBQ,QAAjB;IAED;EA7BO;AAXyB,CAAD,CAA7B,C,CA6CP;;AACA,OAAO,MAAM;EAAEJ,WAAF;EAAeK;AAAf,IAA+BZ,SAAS,CAACmB,OAA/C;AAEP,eAAenB,SAAS,CAACoB,OAAzB"},"metadata":{},"sourceType":"module"}