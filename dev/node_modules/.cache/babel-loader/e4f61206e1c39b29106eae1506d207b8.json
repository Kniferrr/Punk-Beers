{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const todoform = createSlice({\n  name: 'todoform',\n  initialState: {\n    lable: \"3\"\n  },\n  reducers: {\n    onLableChange: state => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      console.log(state);\n      state.lable = \"3\";\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  onLableChange\n} = todoform.actions;\nexport default todoform.reducer;","map":{"version":3,"names":["createSlice","todoform","name","initialState","lable","reducers","onLableChange","state","console","log","actions","reducer"],"sources":["/run/media/knifer/PROGRAMS DIMON/react2/redux-todo/src/redusers/todoformReduser.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const todoform = createSlice({\n  name: 'todoform',\n  initialState: {\n    lable: \"3\",\n  },\n  reducers: {\n    onLableChange: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      console.log(state)\n      state.lable = \"3\";\n      \n    },\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { onLableChange } = todoform.actions\n\nexport default todoform.reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,QAAQ,GAAGD,WAAW,CAAC;EAClCE,IAAI,EAAE,UAD4B;EAElCC,YAAY,EAAE;IACZC,KAAK,EAAE;EADK,CAFoB;EAKlCC,QAAQ,EAAE;IACRC,aAAa,EAAGC,KAAD,IAAW;MACxB;MACA;MACA;MACA;MACAC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACAA,KAAK,CAACH,KAAN,GAAc,GAAd;IAED;EATO;AALwB,CAAD,CAA5B,C,CAkBP;;AACA,OAAO,MAAM;EAAEE;AAAF,IAAoBL,QAAQ,CAACS,OAAnC;AAEP,eAAeT,QAAQ,CAACU,OAAxB"},"metadata":{},"sourceType":"module"}